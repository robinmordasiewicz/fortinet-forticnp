name: create-gif

on:
  pull_request:
    paths:
      - '**.mov'
    branches:
      - main
  push:
    paths:
      - '**.mov'
    branches:
      - main

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Debug
        uses: hmarr/debug-action@v2
      - name: Checkout Content
        uses: actions/checkout@v3
      - name: Get all changed .mov
        id: changed-files-specific
        uses: tj-actions/changed-files@v36
        with:
          separator: ","
          files: |
            **.mov
      - name: Setup FFmpeg
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        uses: FedericoCarboni/setup-ffmpeg@v2
      - name: Install gifski
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: curl -sLO https://github.com/ImageOptim/gifski/releases/download/1.11.0/gifski_1.11.0_amd64.deb && sudo apt-get update && sudo apt install ./gifski_1.11.0_amd64.deb && rm gifski_1.11.0_amd64.deb
      - name: Create gifs from mov
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: |
          ffmpeg -y -i ${{ steps.changed-files-specific.outputs.all_changed_files }} -filter:v fps=10 tmpout.mov
          ffmpeg -y -i tmpout.mov -filter_complex "[0]pad=w=4+iw:h=4+ih:x=2:y=2:color=black" tmpout2.mov
          rm tmpout.mov
          mkdir tmp
          ffmpeg -i tmpout2.mov tmp/frame%04d.png
          rm tmpout2.mov
          gifski --fps 10 --width 960 --repeat -1 -o ${{ steps.changed-files-specific.outputs.all_changed_files }}.gif tmp/frame*.png
          rm -rf tmp/
      - name: Add & Commit
        uses: EndBug/add-and-commit@v9.1.3


