# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.111.3
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb          
      - name: Install Dart Sass Embedded
        run: sudo snap install dart-sass-embedded
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - name: Copy Theme
        run: RELEASE_API_URL="https://api.github.com/repos/McShelby/hugo-theme-relearn/releases/latest" && TARBALL_URL=$(curl --silent "$RELEASE_API_URL" | jq --raw-output '.tarball_url') && TAG_NAME=$(curl --silent "$RELEASE_API_URL" | jq --raw-output '.tag_name') && curl -L -o hugo-theme-relearn-${TAG_NAME}.tar.gz ${TARBALL_URL} && mkdir -p themes/hugo-theme-relearn/ && tar -zxvf hugo-theme-relearn-${TAG_NAME}.tar.gz -C themes/hugo-theme-relearn/ --strip-components 1
      - name: Copy Style
        run: RELEASE_API_URL="https://api.github.com/repos/robinmordasiewicz/fortinet-hugo-theme/releases/latest" && TARBALL_URL=$(curl --silent "$RELEASE_API_URL" | jq --raw-output '.tarball_url') && TAG_NAME=$(curl --silent "$RELEASE_API_URL" | jq --raw-output '.tag_name') && TAG_NAME=$(curl --silent "$RELEASE_API_URL" | jq --raw-output '.tag_name') && curl -L -o fortinet-hugo-theme-${TAG_NAME}.tar.gz ${TARBALL_URL} && tar -zxvf fortinet-hugo-theme-${TAG_NAME}.tar.gz -C ./ --strip-components 1
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
